FormDataContext.jsx

import { useContext, useState, createContext, useEffect } from "react";
import axios from "axios";

const FormDataContext = createContext();
export default FormDataContext;

export const FormDataProvider = ({ children }) => {
	const [formData, setFormData] = useState({
		matriculation_number: "",
		first_name: "",
		middle_name: "",
		last_name: "",
		department: "",
		fee: "",
		amount: "",
	});

	const name = "praise";

	const [data, setData] = useState();
	const [departments, setDepartments] = useState([]);
	const [fees, setFees] = useState([]);

	const handleSubmit = async (e) => {
		e.preventDefault();
		await pay();
	};
	const PAYSTACK_SECRET_KEY =
		"sk_test_d77866a8e1822e78b4b62e5742e645de0fbf721e";

	const pay = async () => {
		try {
			const response = await fetch(
				"https://api.paystack.co/transaction/initialize",
				{
					method: "POST",
					headers: {
						"Content-Type": "application/json",
						Authorization: `Bearer ${PAYSTACK_SECRET_KEY}`,
					},
					body: JSON.stringify({
						amount: formData.amount * 100,
						currency: "NGN",
						email: user.email,
						callback_url: "http://localhost:5173/reciept-page/",
					}),
				}
			);
			const data = await response.json();
			setData(data);
			console.log(data);
		} catch (error) {
			console.error("Error occurred while initializing payment:", error);
		}
	};

	useEffect(() => {
		axios
			.get("http://localhost:8000/api/departments/")
			.then((response) => setDepartments(response.data))
			.catch((error) => console.error("Error fetching departments:", error));
	}, []);

	const handleDepartmentChange = (value) => {
		const selectedDepartment = departments.find(
			(department) => department.id === parseInt(value)
		);

		setFormData((prevState) => ({
			...prevState,
			department: selectedDepartment ? selectedDepartment.department : "",
			fee: "",
			amount: "",
		}));

		axios
			.get(`http://localhost:8000/api/fees/${value}/`)
			.then((response) => setFees(response.data))
			.catch((error) => console.error("Error fetching fees:", error));
	};

	const handleFeeChange = (value) => {
		const selectedFee = fees.find((fee) => fee.id === parseInt(value));

		setFormData((prevState) => ({
			...prevState,
			fee: selectedFee ? selectedFee.fee : "",
			amount: selectedFee ? selectedFee.amount : "",
		}));
	};

	const formDataData = {
		formData: formData,
		handleSubmit: handleSubmit,
		handleDepartmentChange: handleDepartmentChange,
		handleFeeChange: handleFeeChange,
		departments: departments,
		fees: fees,
		name: name,
	};

	return (
		<FormDataContext.Provider value={formDataData}>
			{children}
		</FormDataContext.Provider>
	);
};


App.jsx
import HomePage from "./pages/HomePage";
import { BrowserRouter, Routes, Route } from "react-router-dom";
import LoginPage from "./pages/LoginPage";
import PrivateRoute from "./utils/PrivateRoute";
import PaymentPage from "./pages/PaymentPage";
import { AuthProvider } from "./context/AuthContext";
import GetSupportPage from "./pages/GetSupportPage";
import { FormDataProvider } from "./context/FormDataContext";
import RecieptPage from "./pages/RecieptPage";

function App() {
	return (
		<BrowserRouter>
			<AuthProvider>
				<FormDataProvider>
					<Routes>
						<Route path="/home-page" element={<HomePage />} />
						<Route path="/reciept-page" element={<RecieptPage />} />
						<Route element={<PrivateRoute />}>
							<Route path="/payment" element={<PaymentPage />}></Route>
						</Route>
						<Route element={<PrivateRoute />}>
							<Route path="/get-support" element={<GetSupportPage />}></Route>
						</Route>
					</Routes>
				</FormDataProvider>
			</AuthProvider>
		</BrowserRouter>
	);
}

export default App;



Payment.jsx

import React, { useContext, useEffect, useState } from "react";
import Navbar from "../components/Navbar";
import Footer from "../components/Footer";
import AuthContext from "../context/AuthContext";
import axios from "axios";
import formDataContext from "../context/FormDataContext";
import RecieptPage from "./RecieptPage";

const PaymentPage = () => {
	const { user } = useContext(AuthContext);
	const {
		setFormData,
		formData,
		handleSubmit,
		handleDepartmentChange,
		handleFeeChange,
		departments,
		fees,
	} = useContext(formDataContext);

	return (
		<>
			<div className="main-container bg-background-image bg-opacity-[10%] absolute w-full bg-contain bg-no-repeat bg-center h-screen">
				<div>
					<div className="text-shadow h-screen bg-white bg-opacity-[90%]">
						<Navbar rightButton="Get support" />

						<div className="form-container mt-[5rem]">
							<form
								className="max-w-[85%] ss:max-w-[400px] mx-auto"
								onSubmit={handleSubmit}
							>
								<input
									type="text"
									onChange={(e) =>
										setFormData((prevState) => ({
											...prevState,
											first_name: e.target.value,
										}))
									}
									placeholder="First Name"
									className="border border-gray-300 text-black text-sm rounded-lg block w-full p-1.5 my-2 focus:outline-none focus:border-blue-500"
								/>
								<input
									type="text"
									placeholder="Middle Name"
									onChange={(e) =>
										setFormData((prevState) => ({
											...prevState,
											middle_name: e.target.value,
										}))
									}
									className="border border-gray-300 text-black text-sm rounded-lg block w-full p-1.5 my-2 focus:outline-none focus:border-blue-500"
								/>
								<input
									type="text"
									onChange={(e) =>
										setFormData((prevState) => ({
											...prevState,
											last_name: e.target.value,
										}))
									}
									placeholder="Last Name"
									className="border border-gray-300 text-black text-sm rounded-lg block w-full p-1.5 my-2 focus:outline-none focus:border-blue-500"
								/>
								<input
									type="text"
									onChange={(e) =>
										setFormData((prevState) => ({
											...prevState,
											matriculation_number: e.target.value,
										}))
									}
									placeholder="Matriculation Number"
									className="border border-gray-300 text-black text-sm rounded-lg block w-full p-1.5 my-2 focus:outline-none focus:border-blue-500"
								/>
								<select
									id="department"
									className="border border-gray-300 text-sm rounded-lg w-full p-2 focus:outline-none focus:border-blue-500 bg-white mb-2"
									value={formData.department}
									onChange={(e) => handleDepartmentChange(e.target.value)}
								>
									<option value="" className="">
										{formData.department
											? formData.department
											: "Select Department"}
									</option>
									{departments.map((department) => (
										<option
											key={department.id}
											value={department.id}
											className="text-gray-400"
										>
											{department.department}
										</option>
									))}
								</select>
								<select
									id="fee"
									className="border border-gray-300 text-red text-sm rounded-lg w-full p-2 focus:outline-none mb-2 focus:border-blue-500 bg-white"
									value={formData.fee}
									onChange={(e) => handleFeeChange(e.target.value)}
								>
									<option value="" className="">
										{formData.fee ? formData.fee : "Select Fee"}
									</option>
									{fees.map((fee) => (
										<option
											key={fee.id}
											value={fee.id}
											className="text-gray-400"
										>
											{fee.fee}
										</option>
									))}
								</select>
								<input
									type="text"
									placeholder="Amount"
									readOnly
									value={formData.amount}
									onChange={(e) =>
										setFormData((prevState) => ({
											...prevState,
											amount: e.target.value,
										}))
									}
									className="border border-gray-300 text-gray-500 text-sm rounded-lg block w-full p-1.5 focus:outline-none focus:border-blue-500"
								/>
								<div className="payment-button">
									<button className="bg-sky-400 w-full rounded-lg py-1 mt-2 text-white">
										Pay
									</button>
								</div>
							</form>
						</div>
						<Footer />
					</div>
				</div>
			</div>
		</>
	);
};

export default PaymentPage;

Home.jsx
import React from "react";
import Navbar from "../components/Navbar";
import HomeHero from "../components/HomeHero";
import Footer from "../components/Footer";
import { useState, useContext } from "react";
import AuthContext from "../context/AuthContext";
import FormDataContext from "../context/FormDataContext";

const HomePage = () => {
	const { formData } = useContext(FormDataContext);
	return (
		<div className="main-container bg-background-image bg-opacity-[10%] absolute w-full bg-contain bg-no-repeat bg-center h-screen">
			<div>
				<div className="text-shadow h-screen bg-white bg-opacity-[90%]">
					<Navbar rightButton="Get support" />
					<HomeHero />
					amount: {formData.amount}
					<Footer />
				</div>
			</div>
		</div>
	);
};

export default HomePage;


why is formData.amount not displaying in the home page